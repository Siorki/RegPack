v4.0 - December 2015

New features :
 - #16 : Add an option for base64 encoded output
 - #19 : Use setInterval() to evaluate the unpacked code
 - #21 : Hash not only canvas functions, but also canvas properties
 - #23 : Extra hashing functions
 - #25 : Visualize the compressed patterns inside the source code

Fixed bugs
 - #10 : Use varsNotReassigned in renameObjectMethods 
 - #17 : Hashing code confuses first and second 2D context
 - #20 : Code packed in FF fails in Chrome because of deprecated context methods 
 - #27 : Do not let variable renaming interfere with the use of the variable _
 - #28 : Unable to create 2D/GL/Audio context under Node.js
 - #29 : Variable renaming gives different results under FF / Chrome / Node.js
 - #30 : support for '!' character in WebGL context declaration
 - #31 : Single - character misinterpreted as range in RegExp

------------------------------
v3.0.2 - February 2015

Fixed bugs
 - #9 : Canvas hashing can overwrite the "protected" variables
 - #11 : Different results between FF and other browsers, method array.fill() interferes with algorithm
 - #12 : Disable AudioContext hashing option if the browser does not support the WebAudio API

------------------------------
v3.0.1 - March 2014

Fixed bugs
 - #2 : support for Unicode characters in regular expression
 - #4 : original size showed without added escapes
 - #5 : correct size in bytes after preprocessing stage
------------------------------
v3.0 - February 2014

Added preprocessing stage at the beginning of compression workflow.
Preprocessing :
 - method hashing/renaming for 2D context, WebGL context and AudioContext 
 - variable renaming to free tokens for the crusher
 
Fixed bugs :
 - Incorrect CR/LF handling for code using characters below 10
 - Character 127 ignored in negated char class regexp
------------------------------
v2 - April 2013

Use of regular expressions with negated char class (listing characters not to match on).
------------------------------
